- name: Debug terraform directory
  ansible.builtin.debug:
    msg: "{{tf_dir}}"


- name: Create terraform directory
  file:
    path: "{{tf_dir}}"
    state: directory

- name: Find existing terraform config
  find:
    paths: "{{tf_dir}}"
    patterns: "*.tf"
  register: tfconfig

- name: Cleanup existing terraform config
  file:
    path: "{{item.path}}"
    state: absent
  loop: "{{tfconfig.files}}"

- name: Create Terraform provider
  template:
    src: "provider_openstack.tf"
    dest: "{{tf_dir}}/provider_openstack.tf"
    mode: '0600'


- name: Create Terraform provider
  template:
    src: "provider_ovh.tf"
    dest: "{{tf_dir}}/provider_ovh.tf"
    mode: '0600'


- name: Create Terraform config
  template:
    src: "{{item}}"
    dest: "{{tf_dir}}/{{item}}"
    mode: '0600'
  loop:
    - terraform.tf
    - id_rsa.pub

# - name: Create Terraform DNS provider
#   template:
#     src: "domain_ovh.tf"
#     dest: "{{tf_dir}}/domain.tf"
#     mode: '0600'

- name: Create Terraform SSH config
  template:
    src: "ssh.tf"
    dest: "{{tf_dir}}/ssh_{{version_major}}_{{region|lower}}.tf"
    mode: '0600'
  vars:
    - region: "{{item}}"
    - provider: "openstack"
  #loop: "{{regions}}"
  loop: "{{lookup('vars', 'regions',wantlist=True)}}"


# - name: Create Terraform Grafana config
#   template:
#     src: "instance.tf"
#     dest: "{{tf_dir}}/{{name}}.tf"
#     mode: '0600'
#   vars:
#     - name: "{{workspace}}-{{deployment}}-{{grafana_name}}-{{grafana_version}}"
#     - group: "{{grafana_group}}"
#     - image: "{{grafana_image}}"
#     - flavour: "{{grafana_flavor}}"
#     - region: "{{grafana_region}}"
#     - ansible_user: "{{grafana_ansible_user}}"



- name: Create Terraform Quetz instance
  template:
    src: "instance.tf"
    dest: "{{tf_dir}}/{{name}}.tf"
    mode: '0600'
  vars:
    - name: "{{workspace}}-{{deployment}}-{{quetz_name}}-{{version_major}}"
    - alias: "{{quetz_alias}}"
    - alias2: "{{quetz_alias2}}"
    - group: "{{quetz_group}}"
    - image: "{{quetz_image}}"
    - flavour: "{{quetz_flavor}}"
    - region: "{{quetz_region}}"
    - ansible_user: "{{quetz_ansible_user}}"

- name: Create Terraform Quetz A Record
  template:
    src: "record_a_ovh.tf"
    dest: "{{tf_dir}}/{{name}}.tf"
    mode: '0600'
  vars:
    - hostname: "{{workspace}}-{{deployment}}-{{quetz_name}}-{{version_major}}"
    - name: "dns_{{hostname}}"

- name: Create Terraform Quetz CNAME Record
  template:
    src: "record_ovh.tf"
    dest: "{{tf_dir}}/{{name}}.tf"
    mode: '0600'
  vars:

    - zone: "{{domain}}"
    - fieldtype: "CNAME"
    - ttl: "60"
    - subdomain: "{{workspace}}-{{deployment}}-{{quetz_name}}-{{version_major}}-repo"
    - target: "{{workspace}}-{{deployment}}-{{quetz_name}}-{{version_major}}"
    - name: "dns_{{subdomain}}"


# - name: Create Terraform Quetz Repo DNS config
#   template:
#     src: "record_ovh.tf"
#     dest: "{{tf_dir}}/{{name}}.tf"
#     mode: '0600'
#   vars:
#     - hostname: "{{workspace}}-{{deployment}}-{{quetz_name}}-repo-{{version_major}}"
#     - name: "dns_{{hostname}}_repo"

# - name: Create Terraform Quetz DNS config
#   template:
#     src: "record_ovh.tf"
#     dest: "{{tf_dir}}/{{name}}.tf"
#     mode: '0600'
#   vars:
#     - hostname: "{{workspace}}-{{deployment}}-{{quetz_name}}-repo-{{version_major}}"
#     - name: "dns_{{hostname}}-repo"

- name: Deploy OpenStack instances
  community.general.terraform:
    project_path: "{{tf_dir}}"
    state: present
    force_init: true
    variables:
      # ovh_endpoint: "{{ovh_endpoint}}"
      # ovh_application_key: "{{ovh_application_key}}"
      # ovh_application_secret: "{{ovh_application_secret}}"
      # ovh_consumer_key: "{{ovh_consumer_key}}"
      os_auth_url: "{{os_auth_url}}"
      os_user_name: "{{os_user_name}}"
      os_domain_name: "{{os_domain_name}}"
      os_tenant_id: "{{os_tenant_id}}"
      os_tenant_name: "{{os_tenant_name}}"
      os_password: "{{os_password}}"
      ovh_endpoint: "{{ovh_endpoint}}"
      ovh_application_key: "{{ovh_application_key}}"
      ovh_consumer_key: "{{ovh_consumer_key}}"
      ovh_application_secret: "{{ovh_application_secret}}"


